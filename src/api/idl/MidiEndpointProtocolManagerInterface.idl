// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App API and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================

import "oaidl.idl";
import "unknwn.idl";


typedef struct
{
    BYTE FirstGroup;
    BYTE NumberOfGroupsSpanned;
    BOOL IsActive;
    BOOL IsMIDIMessageDestination;  // if clients can send messages TO this block. We should create a MIDI 1.0 output port
    BOOL IsMIDIMessageSource;       // if clients can receive messages FROM this block. We should create a MIDI 1.0 input port
    BSTR Name;

} DISCOVEREDFUNCTIONBLOCK, *PDISCOVEREDFUNCTIONBLOCK;


// this only contains key info required by the endpoint managers
// so they can create compatible MIDI 1.0 ports from the results
// from MIDI 2.0 protocol negotiation
typedef struct
{
    BOOL EndpointInformationReceived;

    BSTR EndpointSuppliedName;
    BSTR EndpointSuppliedProductInstanceId;

    BYTE NumberOfFunctionBlocksDeclared;
    BYTE NumberOfFunctionBlocksReceived;
    BOOL FunctionBlocksAreStatic;

    BOOL EndpointSupportsMIDI2Protocol;
    BOOL EndpointSupportsMIDI1Protocol;
        
    SAFEARRAY(DISCOVEREDFUNCTIONBLOCK) DiscoveredFunctionBlocks;

}  ENDPOINTPROTOCOLNEGOTIATIONRESULTS, *PENDPOINTPROTOCOLNEGOTIATIONRESULTS;


[
    object,
    local,
    uuid(7a3def20-fb76-49b6-a3a0-3dcbcda8f482),
    pointer_default(unique)
]
interface IMidiEndpointProtocolManagerInterface : IUnknown
{
    HRESULT NegotiateAndRequestMetadata(
        [in] LPCWSTR DeviceInterfaceId,
        [in] BOOL PreferToSendJRTimestampsToEndpoint,
        [in] BOOL PreferToReceiveJRTimestampsFromEndpoint,
        [in] BYTE PreferredMidiProtocol,
        [in] WORD TimeoutMS, 
        [out, retval] PENDPOINTPROTOCOLNEGOTIATIONRESULTS* NegotiationResults
    );

    // TODO: The above method should have out params for the discovered function blocks
    // to make it easier for the endpoint to create initial MIDI 1.0 compat devices

};
