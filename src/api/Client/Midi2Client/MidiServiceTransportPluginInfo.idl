// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App API and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================

#include "midl_defines.h"
MIDI_IDL_IMPORT


namespace Windows.Devices.Midi2
{
    [MIDI_API_CONTRACT(1)]
    [default_interface]
    runtimeclass MidiServiceTransportPluginInfo
    {
        Guid ClassId{ get; };           // from registry
        String RegistryKey{ get; };     // from registry
        Boolean IsEnabled{ get; };      // from registry


        String Name{ get; };            // from component information
        String ShortName{ get; };       // from component information
        String Mnemonic{ get; };        // same mnemonic as used in device creation
        String Description{ get; };     // from component information

        // TBD if we change this to an image type or URI instead
        String IconPath{ get; };        // from component information

        String Author{ get; };          // from component information

        // controls whether or not endpoints can be created/deleted at runtime by apps or settings
        Boolean IsRuntimeCreatable{ get; };

        Boolean IsSystemManaged{ get; };       // True if it can't be added/removed. may get this from the registry
        Boolean IsClientConfigurable{ get; };               // true if we should try to instantiate the config assembly
        String ClientConfigurationAssemblyName{ get; };    // this needs to come from the component to prevent registry hacks
    }
}